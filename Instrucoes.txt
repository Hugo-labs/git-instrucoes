-=-=- Instruções para usar o git -=-=-

1- Ao criar uma pasta com versionamento 
	git init
	
2- Após alguma alteração execute
	git status
	
3- Para adicionar algo para versionamento 
	git add "nome do arquivo" ou . para selecionar todos
	
4- Para comitar
	git commit -m "uma mensagem"
	
5- Para indicar o repositório no qual será enviado
	git remote add origin "chave ssh ou https"
	
6- Para definir a branch antes de enviar
	git push --set-upstream origin master

7- Para enviar para o github
	git push

-=-=- Transitar entre as versões -=-=-

1- Para conseguir ver o ID das versões anteriores
	git reflog
	
2- Para transitar entre as versões
	git reset --hard "ID da versão desejada"
	
-=-=- Branchs -=-=-

1- Para ver as Branchs que temos no projeto
	git branch
	
2- Para criar uma nova branch
	git branch "nome da nova branch"
	
*Obs, ao usarmos o git branch, notaremos que a branch que estamos usando estará marcada em verde

3- Para alterarmos a branch em que estamos 
	git checkout "nome da branch que deseja acessar"
	
-=-=- Merge -=-=-

*SUPER OBS antes de fazer uma merge na branch principal, é ideal que rode primeiro um pull, para puchar as atualizações da branch principal, e não correr o risco de dar o branch em uma versão desatualizada do código, então, dentro da branch principal

0- Para puxar os dados atualizados a branch principal, antes de fazer um merge
	git pull

1- Como unir uma branch de teste (o que tem algo novo sendo implementado) a branch principal

*Obs, esteja na branch que irá receber as alterações 
	git merge "nome da branch que deseja unificar com a principal"
	
2- Para enviar as alterações
	git push
	
-=-=- Como criar e alterar a branch que estamos em uma linha -=-=- 

*Obs, passo a passo do processo que será feito na prática

1- Trazer as atualizações da branch principal para o nosso branch local
	git pull
	
2- Forma para criar uma nova branch e já entrar nela com sómente uma linha
	git checkout "nome da nova branch" -b "nome da branch que será utilizada como base"
